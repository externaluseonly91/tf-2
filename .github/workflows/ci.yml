name: casper

permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

on:
  push:
    branches:
      - main

jobs:
  casper-job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1  

      - name: Check AWS authentication
        run: |
          # Check AWS authentication status
          aws sts get-caller-identity


      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.MY_PROJECT_TOKEN }}

      - name: Build my-api-repo
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/my-api-repo:latest -f Dockerfile.rails .
          docker push ghcr.io/${{ github.repository_owner }}/my-api-repo:latest

      - name: Build my-spa-repo
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/my-spa-repo:latest -f Dockerfile.react .
          docker push ghcr.io/${{ github.repository_owner }}/my-spa-repo:latest

      - name: Build my-nginx-repo
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/my-nginx-repo:latest -f Dockerfile.nginx .
          docker push ghcr.io/${{ github.repository_owner }}/my-nginx-repo:latest

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master
        
      - name: Deploy db
        run: kubectl apply -f db-deployment.yaml
        
      - name: Deploy db
        run: kubectl apply -f db-deployment.yaml
        
